// Generated by view binder compiler. Do not edit!
package com.example.hospitals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hospitals.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CardView cardFour;

  @NonNull
<<<<<<< HEAD
  public final CardView cardFourFive;

  @NonNull
=======
>>>>>>> dev
  public final CardView cardOne;

  @NonNull
  public final CardView cardThree;

  @NonNull
  public final Guideline guideline10;

  @NonNull
  public final Guideline guideline11;

  @NonNull
  public final Guideline guideline12;

  @NonNull
  public final Guideline guideline13;

  @NonNull
  public final Guideline guideline14;

  @NonNull
  public final LinearLayout linearLanguage;

  @NonNull
<<<<<<< HEAD
  public final LinearLayout linearLocation;

  @NonNull
=======
>>>>>>> dev
  public final LinearLayout linearPrivacyPolicy;

  @NonNull
  public final LinearLayout linearRateApp;

  private FragmentSettingsBinding(@NonNull FrameLayout rootView, @NonNull CardView cardFour,
<<<<<<< HEAD
      @NonNull CardView cardFourFive, @NonNull CardView cardOne, @NonNull CardView cardThree,
      @NonNull Guideline guideline10, @NonNull Guideline guideline11,
      @NonNull Guideline guideline12, @NonNull Guideline guideline13,
      @NonNull Guideline guideline14, @NonNull LinearLayout linearLanguage,
      @NonNull LinearLayout linearLocation, @NonNull LinearLayout linearPrivacyPolicy,
      @NonNull LinearLayout linearRateApp) {
    this.rootView = rootView;
    this.cardFour = cardFour;
    this.cardFourFive = cardFourFive;
=======
      @NonNull CardView cardOne, @NonNull CardView cardThree, @NonNull Guideline guideline10,
      @NonNull Guideline guideline11, @NonNull Guideline guideline12,
      @NonNull Guideline guideline13, @NonNull Guideline guideline14,
      @NonNull LinearLayout linearLanguage, @NonNull LinearLayout linearPrivacyPolicy,
      @NonNull LinearLayout linearRateApp) {
    this.rootView = rootView;
    this.cardFour = cardFour;
>>>>>>> dev
    this.cardOne = cardOne;
    this.cardThree = cardThree;
    this.guideline10 = guideline10;
    this.guideline11 = guideline11;
    this.guideline12 = guideline12;
    this.guideline13 = guideline13;
    this.guideline14 = guideline14;
    this.linearLanguage = linearLanguage;
<<<<<<< HEAD
    this.linearLocation = linearLocation;
=======
>>>>>>> dev
    this.linearPrivacyPolicy = linearPrivacyPolicy;
    this.linearRateApp = linearRateApp;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_four;
      CardView cardFour = ViewBindings.findChildViewById(rootView, id);
      if (cardFour == null) {
        break missingId;
      }

<<<<<<< HEAD
      id = R.id.card_four_five;
      CardView cardFourFive = ViewBindings.findChildViewById(rootView, id);
      if (cardFourFive == null) {
        break missingId;
      }

=======
>>>>>>> dev
      id = R.id.card_one;
      CardView cardOne = ViewBindings.findChildViewById(rootView, id);
      if (cardOne == null) {
        break missingId;
      }

      id = R.id.card_three;
      CardView cardThree = ViewBindings.findChildViewById(rootView, id);
      if (cardThree == null) {
        break missingId;
      }

      id = R.id.guideline10;
      Guideline guideline10 = ViewBindings.findChildViewById(rootView, id);
      if (guideline10 == null) {
        break missingId;
      }

      id = R.id.guideline11;
      Guideline guideline11 = ViewBindings.findChildViewById(rootView, id);
      if (guideline11 == null) {
        break missingId;
      }

      id = R.id.guideline12;
      Guideline guideline12 = ViewBindings.findChildViewById(rootView, id);
      if (guideline12 == null) {
        break missingId;
      }

      id = R.id.guideline13;
      Guideline guideline13 = ViewBindings.findChildViewById(rootView, id);
      if (guideline13 == null) {
        break missingId;
      }

      id = R.id.guideline14;
      Guideline guideline14 = ViewBindings.findChildViewById(rootView, id);
      if (guideline14 == null) {
        break missingId;
      }

      id = R.id.linear_language;
      LinearLayout linearLanguage = ViewBindings.findChildViewById(rootView, id);
      if (linearLanguage == null) {
        break missingId;
      }

<<<<<<< HEAD
      id = R.id.linear_location;
      LinearLayout linearLocation = ViewBindings.findChildViewById(rootView, id);
      if (linearLocation == null) {
        break missingId;
      }

=======
>>>>>>> dev
      id = R.id.linear_privacy_policy;
      LinearLayout linearPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (linearPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.linear_rate_app;
      LinearLayout linearRateApp = ViewBindings.findChildViewById(rootView, id);
      if (linearRateApp == null) {
        break missingId;
      }

<<<<<<< HEAD
      return new FragmentSettingsBinding((FrameLayout) rootView, cardFour, cardFourFive, cardOne,
          cardThree, guideline10, guideline11, guideline12, guideline13, guideline14,
          linearLanguage, linearLocation, linearPrivacyPolicy, linearRateApp);
=======
      return new FragmentSettingsBinding((FrameLayout) rootView, cardFour, cardOne, cardThree,
          guideline10, guideline11, guideline12, guideline13, guideline14, linearLanguage,
          linearPrivacyPolicy, linearRateApp);
>>>>>>> dev
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
